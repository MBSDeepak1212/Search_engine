Chef is fond of pepperoni pizza, as we saw here. Once again, he has a pepperoni pizza in the shape of a grid with NNN rows (numbered 111 through NNN from top to bottom) and NNN columns (numbered 111 through NNN from left to right). Some cells of this grid contain pepperoni, while other ones do not.Chef wants to cut the pizza vertically in half and give the two halves to two of his friends. Formally, one friend should get everything in columns 111 through N/2N/2N/2 and the other friend should get everything in the columns N/2+1N/2+1N/2+1 through NNN.Before cutting the pizza, Chef may perform the following operation any number of times (including zero): choose an integer xxx (1\xe2\x89\xa4x\xe2\x89\xa4N1\xe2\x89\xa4x\xe2\x89\xa4N1 \\le x \\le N) and reverse the xxx-th row of the grid \xe2\x80\x95 in other words, for each valid iii, the cell in the iii-th column and xxx-th row is moved to the N+1\xe2\x88\x92iN+1\xe2\x88\x92iN+1-i-th column in the same row.After the pizza is cut, let's denote the number of cells containing pepperoni in the first half and in the second half by p1p1p_1 and p2p2p_2 respectively. Chef wants to minimise their absolute difference |p1\xe2\x88\x92p2||p1\xe2\x88\x92p2||p_1-p_2|, but he is lazy, so he just wants you to perform any valid sequence of operations such that the absolute difference in the final grid is minimized.You need to find a final grid (the grid after performing all operations) such that |p1\xe2\x88\x92p2||p1\xe2\x88\x92p2||p_1 - p_2| for this grid is the smallest possible. If there are multiple final grids that minimise |p1\xe2\x88\x92p2||p1\xe2\x88\x92p2||p_1 - p_2|, you may find any one.