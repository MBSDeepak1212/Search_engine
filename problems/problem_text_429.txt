Some cooking competitions going on to be held in various cities and the Chef wants to participate in them. There are NNN cities numbered from 111 to NNN and they are connected by N\xe2\x88\x921N\xe2\x88\x921N-1 roads such that every city is connected to every other city. But traveling is a bit different here. Every city iii is assigned a travel value, AiAiA_i. From a city numbered XXX, one can only travel to another city YYY such that the simple path from XXX to YYY has exactly AXAXA_X roads.To participate in a city's competition, the Chef just has to visit it. Help the Chef by finding the maximum number of competitions he can participate in if he can start from any city and visit any city multiple times.Formally, given a tree in which every node iii is assigned a value AiAiA_i, you have to find the maximum number of distinct nodes that can be visited, if we can start from any node and visit any node multiple times. The only condition is that you can only move from node iii to jjj if the number of edges between iii and jjj is exactly AiAiA_i.Note: Usually, there is no bound on the stack memory, and is equal to the total memory limit of 1.5 GB. But due to a system configuration issue, the stack limit for C++ is temporarily set to 8MB. So, if you believe that your code requires larger stack limit, please include this in your code.