 Zotlin also has the following features:A function with the same name and same declarations can have different implementations in different classes.Each class can inherit zero or more classes (excluding itself). If Class A inherits Class B, we say that Class A is a child of Class B.A class cannot inherit another class if a cycle is formed by inheritance.For example, if Class A inherits Class B and Class B inherits Class C, then Class C cannot inherit Class A.A Class X is called an ancestor of Class Y, if Y inherits directly or indirectly from Class X. ie, say Class Y inherits from Class Z, which inherits from Class X. Then Class X is an ancestor of both Class Y and Class Z.Mr. Zourist \xe2\x80\x94 a very popular programmer \xe2\x80\x94 wrote a program in Zotlin with N classes numbered from 1 to N. Some of these classes have an implementation of a function F. The Zotlin compiler needs to determine which definition of function F should be called for an object of Class 1.In order to deterministically decide which implementation of function F to use, the compiler uses a list called the Resolution Order (RO list). This is a list containing Class 1 and its ancestors. The compiler iterates through this list to search for a class that contains an implementation of function F.The properties of an RO list are as follows:The 1st member of the list is Class 1.The list contains only the ancestors of Class 1. All the Classes in the list are unique.It is guaranteed that no Class occurs after any of its ancestors in the list.Let\'s define the Special RO list as an RO list of length N where the ith member in the list is Class i. That is, the Special RO list is [1, 2, 3, ... , N].Find out the number of distinct class-inheritance hierarchies Mr. Zourist could have created in his program for which one of the valid RO lists is the Special RO list. Print your output modulo 109 + 7.    Two class-inheritance hierarchies are considered different if they have at least one class that inherits a different list of classes.