 There may be self loops and/or multiple edges in the graph.A u-v walk is defined as a sequence of vertices starting at u and ending at v, where consecutive vertices in the sequence are adjacent vertices in the graph i.e. consecutive vertices are connected by some edge.An arbitary walk of length k+1 is, V1,E1,V2,E2,V3,...,Vk,Ek,V(k+1). where Vi and V(i+1) are connected by edge Ei with weigth Ci. In simpler informal words, walk is a path in a graph with no restrictionon the number of times you can visit a vertex or edge. For such walk we define magic to be, magic(walk) = (C1 & C2) ^ (C2 & C3) ^ ... ^ (C(k-1) & C(k)) if k >= 2magic(walk) = 0 if k < 2Note: Here Ci (1 <= i <= k) are the corresponding edge weights.We love magic, don't we? Hence we always want to maximize it. But for a given graph, there are infinite different walks possible. So, you need to think smart and write a program which prints the maximum magic which can be achieved for some walk in the given graph.Here, ' & ' is Binary AND Operator, ' ^ ' is Binary XOR Operator.