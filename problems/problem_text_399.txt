You have an initially empty string SSS, a target string TTT and a sequence of nnn strings p1,p2,\xe2\x80\xa6,pnp1,p2,\xe2\x80\xa6,pnp_1, p_2, \\dots, p_n. You may perform any number of operations; let\'s denote by |S||S||S| the length of the string SSS before the current operation. Each operation should be of one of the following types:insert a lowercase English letter xxx at the beginning of the string SSS; the cost of this operation is clx\xe2\x8b\x85|S|clx\xe2\x8b\x85|S|cl_x \\cdot |S|append a lowercase English letter xxx to the end of SSS with cost crx\xe2\x8b\x85|S|crx\xe2\x8b\x85|S|cr_x \\cdot |S|choose a valid index iii and insert the string pipip_i at the beginning of SSS with cost kli\xe2\x8b\x85|S|kli\xe2\x8b\x85|S|kl_i \\cdot |S|choose a valid index iii and append the string pipip_i to the end of SSS with cost kri\xe2\x8b\x85|S|kri\xe2\x8b\x85|S|kr_i \\cdot |S|Note that in the first two types of operations, xxx refers to any English lower case letter. Not just the letter \'x\'.Your task is to calculate the minimum total cost of building the target string TTT, i.e. the minimum sum of costs of operations needed to make SSS equal to TTT.