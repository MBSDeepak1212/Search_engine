You are given a tree with NNN vertices (numbered 111 through NNN) rooted at vertex 111. There are MMM blue tokens (numbered 111 through MMM) and 111 red token. For each valid iii, the iii-th blue token appears at the root at an integer time titit_i seconds and moves to a leaf vertex viviv_i, crossing one edge per second. In the next second after reaching viviv_i, this token disappears.You control the red token. First, given a starting time SSS, you must choose some leaf vertex of the tree and place it at this vertex at some integer time ttt seconds such that t\xe2\x89\xa5St\xe2\x89\xa5St \\geq S. In one second, you can move the red token to any vertex adjacent to its current vertex. Your aim is to move the red token to vertex 111.At each integer moment in time, the red token is not allowed to be in the same vertex as any blue token.Additionally, you have a hidden ability called KKK-teleport, which can be used any number of times. Whenever KKK-teleport is used to move the red token from its current vertex uuu to some vertex vvv of your choice (possibly uuu itself), it phases out of existence (so it cannot clash with any blue token) and appears in vvv at an integer moment in time of your choice which is at least K\xe2\x8b\x85dist(u,v)K\xe2\x8b\x85dist(u,v)K \\cdot \\mathrm{dist}(u, v) seconds later. Here, dist(u,v)dist(u,v)\\mathrm{dist}(u, v) denotes the shortest distance between vertices uuu and vvv.Find the minimum time at which the red token can reach the root without clashing with any blue token.