 Before using it for real data, they want to test it out with the following problem, as they feel it is very hard for a normal computer to solve this problem.Given a number N, find the sum of f(x) for all x such that 1 <= x <= N.f(x) is defined as the sum of all digits in base 10 representation of the number x.For example, f(121) = 1 + 2 + 1 = 4.As the number N is very big, it is given in the following run length encoded format - N is represented as a sequence of M blocks, where each block i (0 <= i < M) is represented by two integers - (len[i], d[i]). This implies that the digit d[i] occurs len[i] number of times.For example, {(2,1), (1,2), (2,9)} represents the number 11299.Can you help them by writing a solution to validate the supercomputer's output?Note: There will be no leading zeros in the given number.